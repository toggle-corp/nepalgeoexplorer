name: CI

on:
  pull_request:
  push:
    branches:
      - release
    tags:
      - v*

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # Using re-map
      - uses: actions/checkout@v2
        with:
          repository: toggle-corp/re-map
          ref: develop
          path: src/vendor/re-map

      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Run yarn install
        run: yarn install

      # TODO: Fix test and uncommnet
      # - name: Run yarn test
      #   run: yarn test

      - name: Run yarn build (also test)
        run: NODE_OPTIONS=--max_old_space_size=4096 yarn build
        env:
          REACT_APP_MAPBOX_ACCESS_TOKEN: ${{ secrets.MAPBOX_ACCESS_TOKEN  }}

      - name: Save build files as artifact
        uses: actions/upload-artifact@v1
        with:
          name: nepal-geoexplorer
          path: build


  deploy:
    name: Deploy to AWS (S3 + Cloudfront)
    needs: test
    runs-on: ubuntu-latest

    if: github.event_name == 'push' && github.ref == 'refs/heads/release'

    # TODO: Only run for tags and create releaes
    # if: github.event_name == 'push' && startsWith(github.ref,'refs/tags/v')

    steps:
      - uses: actions/download-artifact@v1
        with:
          name: nepal-geoexplorer
          path: build

      # Copy build to S3
      - name: S3 Sync
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION:  ${{ secrets.AWS_REGION }}
          SOURCE_DIR: './build'

      # Invalidate Cloudfront (this action)
      - name: Cloudfront Invalidate
        uses: chetan/invalidate-cloudfront-action@master
        env:
          DISTRIBUTION: ${{ secrets.AWS_DISTRIBUTION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION:  ${{ secrets.AWS_REGION }}
          PATHS: '/index.html'
